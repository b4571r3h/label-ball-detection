name: CI-CD

on:
  push:
    branches: [ main ]

env:
  IMAGE: ghcr.io/b4571r3h/label-ball-detection:latest
  CONTEXT: ./ball-web-labeler-subpath

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=registry,ref=${{ env.IMAGE }}
          cache-to: type=inline

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.IONOS_SSH_KEY }}

      - name: Deploy to IONOS
        run: |
          ssh -o StrictHostKeyChecking=no -p "${{ secrets.PORT }}" "${{ secrets.USER }}@${{ secrets.HOST }}" '
            set -e
            cd /root/apps/ball-web-labeler
            echo "PWD=$(pwd)"; ls -la

            # GHCR Login (falls Image privat ist; schadet nicht, wenn Ã¶ffentlich)
            docker login ghcr.io -u "${GITHUB_ACTOR}" -p "${GHCR_TOKEN}" || true

            docker compose -f compose.deploy.yaml pull
            docker compose -f compose.deploy.yaml up -d --remove-orphans --force-recreate

            echo "--- Running containers ---"
            docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Ports}}"

            echo "--- Health ---"
            curl -fsS -i http://localhost/ball-detection/api/health || true
          '
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
