name: CI-CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: ./ball-web-labeler-subpath
          file: ./ball-web-labeler-subpath/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/label-ball-detection:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.IONOS_SSH_KEY }}

      - name: Sanity check secrets
        env:
          HOST: ${{ secrets.IONOS_HOST }}
          USERNAME: ${{ secrets.IONOS_USER }}
          PORT: ${{ secrets.IONOS_PORT }}
        run: |
          [ -n "$HOST" ] || { echo "Missing IONOS_HOST secret"; exit 1; }
          [ -n "$USERNAME" ] || { echo "Missing IONOS_USER secret"; exit 1; }
          PORT=${PORT:-22}
          echo "Will deploy to $HOST:$PORT as $USERNAME"

      - name: Deploy to IONOS
        env:
          HOST: ${{ secrets.IONOS_HOST }}
          USERNAME: ${{ secrets.IONOS_USER }}
          PORT: ${{ secrets.IONOS_PORT }}
        run: |
          set -e
          PORT=${PORT:-22}
          ssh -o StrictHostKeyChecking=no -p "$PORT" "$USERNAME@$HOST" bash -lc '
            set -e
            mkdir -p /root/apps/ball-web-labeler
            cd /root/apps/ball-web-labeler

            cat > compose.deploy.yaml <<EOF
            services:
              labeler:
                image: ghcr.io/${{ github.repository_owner }}/label-ball-detection:latest
                container_name: tt-ball-labeler
                environment:
                  - LABEL_DATA_DIR=/data
                  - APP_ROOT_PATH=/ball-detection
                volumes:
                  - ./data:/data
                ports:
                  - "80:8000"
                restart: unless-stopped
            EOF

            docker compose -f compose.deploy.yaml pull
            docker compose -f compose.deploy.yaml up -d --remove-orphans
          '
